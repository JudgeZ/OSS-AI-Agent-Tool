{{- if .Values.kafka.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "oss-ai-agent-tool.fullname" . }}-kafka
  labels:
    {{- include "oss-ai-agent-tool.labels" . | nindent 4 }}
spec:
  selector:
    {{- include "oss-ai-agent-tool.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: kafka
  ports:
    - name: broker
      port: 9092
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "oss-ai-agent-tool.fullname" . }}-kafka
  labels:
    {{- include "oss-ai-agent-tool.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "oss-ai-agent-tool.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: kafka
  template:
    metadata:
      labels:
        {{- include "oss-ai-agent-tool.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: kafka
    spec:
      containers:
        - name: kafka
          image: {{ .Values.kafka.image | default "bitnami/kafka:3.7.0" }}
          imagePullPolicy: IfNotPresent
          env:
            - name: KAFKA_ENABLE_KRAFT
              value: "yes"
            - name: KAFKA_CFG_NODE_ID
              value: "1"
            - name: KAFKA_CFG_PROCESS_ROLES
              value: "controller,broker"
            - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
              value: {{ printf "1@%s-kafka:9093" (include "oss-ai-agent-tool.fullname" .) | quote }}
            - name: KAFKA_CFG_LISTENERS
              value: "PLAINTEXT://:9092,CONTROLLER://:9093"
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: {{ printf "PLAINTEXT://%s-kafka:9092" (include "oss-ai-agent-tool.fullname" .) | quote }}
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
            - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
              value: "CONTROLLER"
            - name: ALLOW_PLAINTEXT_LISTENER
              value: "yes"
          ports:
            - containerPort: 9092
            - containerPort: 9093
          volumeMounts:
            - name: kafka-data
              mountPath: /bitnami/kafka
          {{- with .Values.kafka.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: kafka-data
          {{- if .Values.kafka.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "oss-ai-agent-tool.fullname" . }}-kafka
          {{- else }}
          emptyDir: {}
          {{- end }}
{{- if .Values.kafka.persistence.enabled }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "oss-ai-agent-tool.fullname" . }}-kafka
  labels:
    {{- include "oss-ai-agent-tool.labels" . | nindent 4 }}
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: {{ .Values.kafka.persistence.size | default "10Gi" }}
  {{- with .Values.kafka.persistence.storageClass }}
  storageClassName: {{ . }}
  {{- end }}
{{- end }}
{{- end }}
